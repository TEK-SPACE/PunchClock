@model PunchClock.Domain.Model.Company
<div class="col-lg-10">
    <div class="well">
        @using (Html.BeginForm("Edit", "Company", null, FormMethod.Post, new { enctype = "multipart/form-data", id = "imgForm" }))
        {
            <fieldset>
                @Html.ValidationSummary()
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.Id)
                @*<legend>Details</legend>*@

                <div class="form-group">
                    @Html.LabelFor(x => x.Name, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.Kendo().TextBoxFor(x => x.Name).HtmlAttributes(new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Name)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Summary, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.Kendo().EditorFor(x => x.Summary).HtmlAttributes(new {@class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Summary)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.LogoUrl, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @if (Model.LogoBinary != null)
                        {
                            string imageBase64 = Convert.ToBase64String(Model.LogoBinary);
                            string imageSrc = $"data:image/gif;base64,{imageBase64}";
                            <img src="@imageSrc" />
                        }
                        @Html.Kendo().Upload().Name("logo").HtmlAttributes(new { type = "file",@class = "form-control", id = "fileUploader" })
                        @*<input id="fileUploader" type="file" name="logo"  accept="image/*;capture=camera" style="margin-left:250px;" />*@
                        @* @Html.TextBoxFor(x => x.logoUrl)*@
                        @Html.ValidationMessageFor(x => x.LogoUrl)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.DeltaPunchTime, new { title = "5 minutes default", @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.Kendo().TextBoxFor(x => x.DeltaPunchTime).HtmlAttributes(new { title = "5 minutes default", type = "number", min = -10, max = 10, value = 1, @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.DeltaPunchTime)
                    </div>
                </div>
                <div class="col-lg-10 btn-group-padding">
                    <input type="submit" value="Update" class="btn btn-primary" />
                </div>
            </fieldset>
        }
    </div>
</div>