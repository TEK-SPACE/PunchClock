@model PunchClock.View.Model.CompanyView
@*@{
    ViewBag.Title = "Update Companies";
}
<hgroup class="title">
    <h1>@ViewBag.Title.</h1>
    <h2>@Html.Raw((string)ViewBag.Message)</h2>
</hgroup>
<hr />*@
@using (Html.BeginForm("Edit", "Employer", null, FormMethod.Post, new { enctype = "multipart/form-data", id="imgForm" }))
{
       @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.CompanyId)
    <ul class="commonForm">
        <li>@Html.LabelFor(x => x.Name)
            @Html.TextBoxFor(x => x.Name)
            @Html.ValidationMessageFor(x => x.Name)
        </li>
        <li>
            @Html.LabelFor(x => x.Summary)
            @Html.TextAreaFor(x => x.Summary, new { style = "width: 382px; height: 75px;" })
            @Html.ValidationMessageFor(x => x.Summary)
        </li>
        <li>
            @Html.LabelFor(x => x.LogoUrl)

            @if (Model.LogoBinary != null)
            {
                string imageBase64 = Convert.ToBase64String(Model.LogoBinary);
                string imageSrc = $"data:image/gif;base64,{imageBase64}";
                <img src="@imageSrc"  />
            }
            <br />
            <input id="fileUploader" type="file" name="logo" accept="image/*;capture=camera" style="margin-left:250px;"/>
            @* @Html.TextBoxFor(x => x.logoUrl)*@
            @Html.ValidationMessageFor(x => x.LogoUrl)
        </li>
        <li>
            @Html.LabelFor(x => x.DeltaPunchTime, new { title = "5 minutes default" })
            @Html.TextBoxFor(x => x.DeltaPunchTime, new { title = "5 minutes default", type = "number", min = -10, max = 10, value = 1 })
            @Html.ValidationMessageFor(x => x.DeltaPunchTime)
        </li>
    </ul>
    <input type="submit" value="Update" class="k-button" />
}