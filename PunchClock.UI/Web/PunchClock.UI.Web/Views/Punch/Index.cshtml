@model PunchClock.TimeTracker.Model.Punch
@{
    ViewBag.Title = "Punch-In or Punch-Out";
}
<div class="col-lg-4">
    <div class="well">
        @if (Model != null)
        {
            using (Ajax.BeginForm("InOut", "Punch",
                new { punchId = Model.Id, inOrOut = "out" },
                new AjaxOptions
                {
                    HttpMethod = "POST",
                    Confirm = "You're about to punch-Out?",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "punchBox"
                },
                htmlAttributes: new { id = "punchInForm", @class = "form-horizontal" }))
            {
                <fieldset id="punchBox">
                    <legend>@ViewBag.Title</legend>
                    <div class="form-group">
                        <div class="col-lg-10">
                            <span>
                                @Html.Raw(string.Format("You have <span class='text-warning'> punched in at <strong>{1}</strong> </span> on {0}",
                        Html.DisplayFor(x => Model.PunchDate),
                       Html.DisplayFor(x => Model.PunchIn)))
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-10">
                            @(Html.Kendo().DateTimePicker()
                    .Name("differentTime")
                                  .Min(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 0, 0, 0))
                                  .Max(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, DateTime.Now.TimeOfDay.Hours, DateTime.Now.TimeOfDay.Minutes, DateTime.Now.TimeOfDay.Seconds)) //Set the min date of the DateTimePicker.
                                  .Value(DateTime.Now) //Set the value of the DateTimePicker.
                    .HtmlAttributes(new
                    {
                        type = "time",
                        @class = "pTime",
                        style = "display:none;",
                        id = "pTimePunchesOut"
                    }))
                            <input type="submit" value="Punch Out Now" class="btn btn-success" />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-10">
                            @Html.CheckBox("reqDifferentTime") <span>Request a different punch out time</span>
                        </div>
                    </div>
                </fieldset>

            }
        }
        else if (Model == null)
        {
            using (Ajax.BeginForm("InOut", "Punch",
                    new { punchId = 0, inOrOut = "in" },
                    new AjaxOptions
                    {
                        HttpMethod = "POST",
                        Confirm = "You're about to punch-In?",
                        InsertionMode = InsertionMode.Replace,
                        UpdateTargetId = "punchBox"
                    },
            htmlAttributes: new
            {
                id = "punchInForm",
                @class = "form-horizontal"
            }))
            {
                <fieldset id="punchBox">
                    <legend> @ViewBag.Title </legend>
                    <div class="form-group">
                        <div class="col-lg-10">
                            @(Html.Kendo().DateTimePicker()
                                  .Name("differentTime")
                                  .Min(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 0, 0, 0))
                                  .Max(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, DateTime.Now.TimeOfDay.Hours, DateTime.Now.TimeOfDay.Minutes, DateTime.Now.TimeOfDay.Seconds)) //Set the min date of the DateTimePicker.
                                  .Value(DateTime.Now) //Set the value of the DateTimePicker.
                                  .HtmlAttributes(new
                                  {
                                      type = "time",
                                      @class = "pTime",
                                      style = "display:none;",
                                      id = "pTimePunchesIn"
                                  }))

                            <input type="submit" value="Punch In" class="btn btn-success" />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-10">
                            @Html.CheckBox("reqDifferentTime") <span>Request a different punch in time</span>
                        </div>
                    </div>
                </fieldset>
            }
        }
    </div>
</div>