@using PunchClock.Ticketing.Model.Constants
@using Tooltip = PunchClock.Ticketing.Model.Constants.Tooltip
@model PunchClock.Ticketing.Model.Ticket
@{
    ViewBag.Title = Model.Title;
}
@*<hgroup class="title">
    <h1>@ViewBag.Title</h1>
    <h2>@Html.Raw((string)ViewBag.Message)</h2>
</hgroup>
<div class="clearFloat"></div>
<hr />*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="col-lg-12 form-horizontal">
        <div class="panel panel-success panel-nomargin">
            <div class="panel-body">Details</div>
        </div>
        <div class="well">
            <fieldset>
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                @Html.Raw(ViewData["ModelError"] as string)
                @Html.HiddenFor(x => x.Id)
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.Kendo().TextBoxFor(model => model.Title).HtmlAttributes(new {@class = "form-control", placeholder = Placeholder.Title, title = Tooltip.Title })
                        @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Html.Kendo().ComboBoxFor(model => model.ProjectId).Suggest(true).Events(x => x.Change("comboboxChangeEvent")).DataTextField("Name").DataValueField("Id").DataSource(x => x.Read("Projects", "Ticket")).Placeholder(Placeholder.Project).HtmlAttributes(new { title = Tooltip.Project})
                        @Html.ValidationMessageFor(model => model.ProjectId, "", new {@class = "text-danger"})
                    </div>
                    <div class="col-md-6">
                        @Html.Kendo().ComboBoxFor(model => model.PriorityId).Events(x => x.Change("comboboxChangeEvent")).DataTextField("Name").DataValueField("Id").DataSource(x => x.Read("Priorities", "Ticket")).Placeholder("Priority")
                        @Html.ValidationMessageFor(model => model.PriorityId, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.Kendo().EditorFor(model => model.Description).Value(x=> Html.Raw(x).ToHtmlString()).HtmlAttributes(new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Html.Kendo().ComboBoxFor(model => model.StatusId).Events(x => x.Change("comboboxChangeEvent")).DataTextField("Name").DataValueField("Id").DataSource(x => x.Read("Status", "Ticket")).Placeholder("Status")
                        @Html.ValidationMessageFor(model => model.StatusId, "", new {@class = "text-danger"})
                    </div>
                    <div class="col-md-6">
                        @Html.Kendo().ComboBoxFor(model => model.TypeId).Events(x => x.Change("comboboxChangeEvent")).DataTextField("Name").DataValueField("Id").DataSource(x => x.Read("Types", "Ticket")).Placeholder("Type")
                        @Html.ValidationMessageFor(model => model.TypeId, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-6">
                        @Html.Kendo().ComboBoxFor(model => model.RequestorId).Events(x => x.Change("comboboxChangeEvent")).DataTextField("DisplayName").DataValueField("Id").DataSource(x => x.Read("All", "User")).Placeholder("Requestor")
                        @Html.ValidationMessageFor(model => model.RequestorId, "", new {@class = "text-danger"})
                    </div>
                    <div class="col-md-6">
                        @Html.Kendo().ComboBoxFor(model => model.AssignedToId).Events(x => x.Change("comboboxChangeEvent")).DataTextField("DisplayName").DataValueField("Id").DataSource(x => x.Read("All", "User")).Placeholder("Assigned To")
                        @Html.ValidationMessageFor(model => model.AssignedToId, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.NotifyTo, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-12">
                        @Html.Kendo().MultiSelectFor(model => model.NotifyTo).DataTextField("DisplayName").DataValueField("Id").DataSource(x => x.Read("All", "User")).Placeholder("Notify To")
                        @Html.ValidationMessageFor(model => model.NotifyTo, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-9">
                        @Html.Kendo().ComboBoxFor(model => model.CategoryId).Events(x => x.Change("comboboxChangeEvent")).DataTextField("Name").DataValueField("Id").DataSource(x => x.Read("Categories", "Ticket")).Placeholder("Category")
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new {@class = "text-danger"})
                    </div>
                    <div class="col-md-3">
                        @Html.Kendo().DatePickerFor(model => model.DueDateUtc).Min(DateTime.Now.AddDays(1)).HtmlAttributes(new {placeholder = "Due Date", style = "width:100%;"})
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new {@class = "text-danger"})
                    </div>
                </div>
            </fieldset>
        </div>
        <div class="panel panel-success panel-nomargin">
            <div class="panel-body">Comments</div>
        </div>
        <div class="well">
            <fieldset>
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.Kendo().Editor().Name("Comment")
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">

                        @if (Model.Comments.Any())
                        {
                            @(Html.Kendo().PanelBar()
                                  .Name("commentsBar")
                                  .Items(panelbar =>
                                  {
                                      foreach (var comment in Model.Comments.OrderByDescending(x=>x.CreatedDateUtc))
                                      {
                                          panelbar.Add().Text($"{comment.CreatedBy.DisplayName} on {comment.CreatedDateUtc:f}").Expanded(true).Enabled(true).Selected(true).Items(item => item.Add().Text(Html.Raw(comment.Description).ToHtmlString()));
                                      }
                                  }))
                        }
                    </div>
                </div>

            </fieldset>
        </div>

        <div class="">
            <input type="submit" value="Submit" class="btn btn-primary"/>
            <input type="submit" value="Cancel" class="btn btn-primary" onclick="location.href = '/Ticket';"/>
        </div>
    </div>
}

@Scripts.Render("~/bundles/Ticketing")
