@model IEnumerable<PunchClock.Ticketing.Model.Ticket>
@{
    ViewBag.Title = "Tickets";
}

@(Html.Kendo().Grid(Model)
      .Name("TicketsGrid")
      .Columns(columns =>
      {
          columns.Bound(c => c.Id);
          columns.Bound(c => c.ProjectId).ClientTemplate("#= Project.Name #");
          columns.Bound(c => c.Title);
          columns.Bound(c => c.CreatedById).ClientTemplate("#= CreatedBy.DisplayName #");
          columns.Bound(c => c.RequestorId).ClientTemplate("#= Requestor.DisplayName #");
          columns.Bound(c => c.TypeId).ClientTemplate("#= Type.Name #"); ;
          columns.Bound(c => c.StatusId).ClientTemplate("#= Status.Name #"); ;
          columns.Bound(c => c.PriorityId).ClientTemplate("#= Priority.Name #"); ;
          columns.Bound(c => c.AssignedToId).ClientTemplate("#= AssignedTo.DisplayName #");
          columns.Bound(c => c.DueDateUtc);
          columns.Bound(c => c.ModifiedById).ClientTemplate("#= ModifiedBy.DisplayName #");
          columns.Bound(c => c.CreatedDateUtc);
          columns.Bound(c => c.ModifiedDateUtc);
          columns.Command(command =>
          {
              command.Edit();
              //command.Destroy();
          });
      })
      //.HtmlAttributes(new { style = "height: 550px;" })
      .Scrollable()
      .Groupable()
      .Sortable()
      .ToolBar(toolbar => {
          //toolbar.Create();
          toolbar.Save();
      })
      .Editable(editable => editable.Mode(GridEditMode.InCell))
      .Pageable(pageable => pageable
          .Refresh(true)
          .PageSizes(true)
          .ButtonCount(5))
      .DataSource(dataSource => dataSource
          .Ajax()
          .Model(model =>
          {
              model.Id(x => x.Id);
              model.Field(c => c.Description).Editable(false);
          })
          .Read(read => read.Action("Read", "Ticket"))
          //.Create(update => update.Action("Add", "Ticket"))
          .Update(update => update.Action("Update", "Ticket"))
          .Destroy(update => update.Action("Delete", "Ticket"))
          .PageSize(20)
      )
      )