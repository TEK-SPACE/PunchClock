@(Html.Kendo().Grid<PunchClock.Ticketing.Model.TicketCategory>()
      .Name("TicketCategoryGrid")
      .Columns(columns =>
      {
          columns.Bound(c => c.Id);
          columns.Bound(c => c.Name);//.Editable("isEditable(data.IsCoreItem,'" + ViewData["IsSuperAdmin"] + "')");
          columns.Bound(c => c.Description).Width(150);
          columns.Bound(c => c.DisplayOrder);
          columns.Bound(c => c.ProjectId).EditorTemplateName("TicketProjects").ClientTemplate("#: data.TicketProject?TicketProject.Name:'' #");
          columns.Bound(c => c.CreatedDateUtc).Format("{0:dd/MM/yyyy HH:mm}");
          columns.Bound(c => c.ModifiedDateUtc).Format("{0:dd/MM/yyyy HH:mm}");

      })
      //.HtmlAttributes(new { style = "height: 550px;" })
      .Scrollable()
      .Groupable()
      .Sortable()
      .ToolBar(toolbar =>
      {
          toolbar.Create();
          toolbar.Save();
      })
      .Editable(editable => editable.Mode(GridEditMode.InCell))
      .Events(events=>events.Edit("onTicketingModuleConfigEdit"))
      .Pageable(pageable => pageable
          .Refresh(true)
          .PageSizes(true)
          .ButtonCount(5))
      .DataSource(dataSource => dataSource
          .Ajax().Sort(sort => sort.Add("CreatedDateUtc").Descending())
          .Model(model =>
          {
              model.Id(x => x.Id);
              model.Field(c => c.Id).Editable(false);

              model.Field(x => x.Name).Editable(true);
              model.Field(x => x.DisplayOrder).Editable(true);
              model.Field(c => c.Description).Editable(true);
              model.Field(c => c.ProjectId).Editable(true).DefaultValue(1);
              model.Field(c => c.CreatedDateUtc).Editable(false);
              model.Field(c => c.ModifiedDateUtc).Editable(false);

          })
          .Read(read => read.Action("ReadCategory", "Ticket"))
          .Create(update => update.Action("AddCategory", "Ticket"))
          .Update(update => update.Action("UpdateCategory", "Ticket"))
          .Destroy(update => update.Action("DeleteCategory", "Ticket"))
          .PageSize(20)
      ))