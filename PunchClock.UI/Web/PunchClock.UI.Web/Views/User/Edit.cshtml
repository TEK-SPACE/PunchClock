@model PunchClock.View.Model.UserView
@{
    ViewBag.Title = "Users Details";
}
@{ List<SelectListItem> accountType = new List<SelectListItem> {new SelectListItem {Text = "Employee", Value = Convert.ToString((int) PunchClock.Core.Models.Common.Enum.UserType.Employee)}, new SelectListItem {Text = "Manager", Value = Convert.ToString((int) PunchClock.Core.Models.Common.Enum.UserType.Manager)}}; }
<div class="col-lg-6">
    <div class="well bs-component">
        @using (Ajax.BeginForm("Edit", "User", null,
                                new AjaxOptions { HttpMethod = "POST", OnSuccess = "postUpdateUser" },
                                new { @class = "form-horizontal" }))
        {
            <fieldset>
                <legend>@ViewBag.Title</legend>
                @Html.HiddenFor(x => x.Id)
                @Html.HiddenFor(x => x.UserId)
                <div class="form-group">
                    @Html.LabelFor(x => x.FirstName, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.FirstName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.LastName, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.TextBoxFor(x => x.LastName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.LastName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Email, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Email)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.PhoneNumber, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.PhoneNumber)
                    </div>
                </div>
                @*   <li>
                        @Html.LabelFor(x => x.password)
                        @Html.PasswordFor(x => x.password)
                        @Html.ValidationMessageFor(x => x.password)
                    </li>
                    <li>
                        @Html.LabelFor(x => x.registrationCode)
                        @Html.TextBoxFor(x => x.registrationCode)
                        @Html.ValidationMessageFor(x => x.registrationCode)
                    </li>*@
                @*  <li>
                        @Html.LabelFor(x => x.userObjLibraryObjLibraryTypeId)
                        @Html.DropDownListFor(x => x.userObjLibraryObjLibraryTypeId, (IEnumerable<SelectListItem>)accountType, "--Select--")
                        @Html.ValidationMessageFor(x => x.userObjLibraryObjLibraryTypeId)
                    </li>*@
                <div class="col-lg-10 col-lg-offset-2">
                    <input type="submit" value="Update" class="btn btn-primary" />
                </div>
            </fieldset>
        }
    </div>
</div>