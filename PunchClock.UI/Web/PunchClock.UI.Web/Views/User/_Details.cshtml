@model PunchClock.Domain.Model.User
<div class="col-lg-10">
    <div class="well">
        @using (Ajax.BeginForm("Details", "User", new { adminUpdate = true }, 
            new AjaxOptions { HttpMethod = "POST", OnSuccess = "postResponseUpdate" }, new { }))
        {
            <fieldset>
                @Html.HiddenFor(x => x.Id)
                @Html.HiddenFor(x => x.Uid)

                <div class="form-group">
                    @Html.LabelFor(x => x.FirstName, new {@class = "col-lg-2 control-label"})
                    <div class="col-lg-10">
                        @Html.TextBoxFor(x => x.FirstName, htmlAttributes: new {@class = "form-control"})
                        @Html.ValidationMessageFor(x => x.FirstName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.LastName, new {@class = "col-lg-2 control-label"})
                    <div class="col-lg-10">
                        @Html.TextBoxFor(x => x.LastName, htmlAttributes: new {@class = "form-control"})
                        @Html.ValidationMessageFor(x => x.LastName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Email, new {@class = "col-lg-2 control-label"})
                    <div class="col-lg-10">
                        @Html.TextBoxFor(x => x.Email, htmlAttributes: new {@class = "form-control"})
                        @Html.ValidationMessageFor(x => x.Email)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.PhoneNumber, new {@class = "col-lg-2 control-label"})
                    <div class="col-lg-10">
                        @Html.TextBoxFor(x => x.PhoneNumber, htmlAttributes: new {@class = "form-control"})
                        @Html.ValidationMessageFor(x => x.PhoneNumber)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.UserTypeId, new {@class = "col-lg-2 control-label"})
                    <div class="col-lg-10">
                        @Html.DropDownListFor(x => x.UserTypeId, (IEnumerable<SelectListItem>) ViewBag.UserTypes, "--Select--", htmlAttributes: new {@class = "form-control"})
                        @Html.ValidationMessageFor(x => x.UserTypeId)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.EmploymentTypeId, new {@class = "col-lg-2 control-label"})
                    <div class="col-lg-10">
                        @Html.DropDownListFor(x => x.EmploymentTypeId, (IEnumerable<SelectListItem>) ViewBag.EmploymentType, "--Select--", htmlAttributes: new {@class = "form-control"})
                        @Html.ValidationMessageFor(x => x.EmploymentTypeId)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.RegisteredTimeZone, new {@class = "col-lg-2 control-label"})
                    <div class="col-lg-10">
                        @Html.DropDownListFor(x => x.RegisteredTimeZone, (IEnumerable<SelectListItem>) Model.TimezonesList, "--Select--", htmlAttributes: new {@class = "k-dropdownTimeZones form-control"})
                        @Html.ValidationMessageFor(x => x.RegisteredTimeZone)
                    </div>
                </div>

                <div class="col-lg-10 btn-group-padding">
                    <input type="submit" value="Update" class="btn btn-primary"/>
                </div>
            </fieldset>
        }
        <div class="clearFloat"></div>
    </div>

</div>