@model PunchClock.Domain.Model.User
@using (Ajax.BeginForm("Details", "User", new { adminUpdate = true }, new AjaxOptions { HttpMethod = "POST", OnSuccess = "postResponseUpdate" }, new { }))
{
     @Html.HiddenFor(x => x.Uid)
    <ul class="commonForm">
        <li>
            @Html.LabelFor(x => x.FirstName)
            @Html.TextBoxFor(x => x.FirstName)
            @Html.ValidationMessageFor(x => x.FirstName)
        </li>
        <li>
            @Html.LabelFor(x => x.LastName)
            @Html.TextBoxFor(x => x.LastName)
            @Html.ValidationMessageFor(x => x.LastName)
        </li>
        <li>
            @Html.LabelFor(x => x.Email)
            @Html.TextBoxFor(x => x.Email)
            @Html.ValidationMessageFor(x => x.Email)
        </li>
        <li>
            @Html.LabelFor(x => x.PhoneNumber)
            @Html.TextBoxFor(x => x.PhoneNumber)
            @Html.ValidationMessageFor(x => x.PhoneNumber)
        </li>
        @*   <li>
            @Html.LabelFor(x => x.password)
            @Html.PasswordFor(x => x.password)
            @Html.ValidationMessageFor(x => x.password)
        </li>*@
      @*  <li>
            @Html.LabelFor(x => x.registrationCode)
            @Html.TextBoxFor(x => x.registrationCode)
            @Html.ValidationMessageFor(x => x.registrationCode)
        </li>*@
     
         <li>
            @Html.LabelFor(x => x.UserTypeId)
            @Html.DropDownListFor(x => x.UserTypeId, (IEnumerable<SelectListItem>)ViewBag.UserTypes, "--Select--", htmlAttributes: new { })
            @Html.ValidationMessageFor(x => x.UserTypeId)
        </li>
        <li>
            @Html.LabelFor(x => x.EmploymentTypeId)
            @Html.DropDownListFor(x => x.EmploymentTypeId, (IEnumerable<SelectListItem>)ViewBag.EmploymentType, "--Select--", htmlAttributes: new { })
            @Html.ValidationMessageFor(x => x.EmploymentTypeId)
        </li>
         <li>
            @Html.LabelFor(x => x.RegisteredTimeZone)
            @Html.DropDownListFor(x => x.RegisteredTimeZone, (IEnumerable<SelectListItem>)Model.TimezonesList, "--Select--", new { @class = "k-dropdownTimeZones" })
            @Html.ValidationMessageFor(x => x.RegisteredTimeZone)
        </li>
        @*<li>
              @Html.Raw(string.Format("last punched in at <strong>{1}</strong> on {0} and punched out at <strong>{2}</strong> ", Model.LastPunch.PunchDate.ToLongDateString(),
         Model.LastPunch.PunchIn, Model.LastPunch.PunchOut))
        </li>*@
    </ul>
    <input type="submit" value="Update" class="k-button" />
}
<div class="clearFloat"></div>